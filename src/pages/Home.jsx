import React, { useState, useEffect } from 'react'
import Card from '../components/Card'
import Loader from '../components/Loader'


const RenderCards = ({ data, title }) => {
  console.log(data);
  if (data?.length > 0) {
    return data.map((post) => <Card key={post?._id} {...post} />)
  }
  return (
    <h2 className='mt-5 font-bold text-[#61dafb] text-xl uppercase'>{title}</h2>
  )
}
const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState('');
  const [searchedResults, setSearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true)
      try {
        const res = await fetch("http://localhost:8081/api/posts/postRoute", {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        })
        const posts = await res.json();
        setAllPosts(posts.data);
      }
      catch (err) {
        console.log(err);
      } finally {
        setLoading(false);
      }
    }
    fetchPosts()
  }, [])

  const handleSearch = (e) => {
    setSearchText(e.target.value);
    clearTimeout(searchTimeout);
    setSearchTimeout(
      setTimeout(() => {
        const searchResults = allPosts.filter((item) => item.name.toLowerCase()
          .includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()));
        setSearchedResults(searchResults);
      }, 500)
    )
  }
  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px]'>
          The Community Showcase
        </h1>
        <p className='mt-2 text-[#666e75]'>Browse through a collection of imaginative and visually
          stunning images generated by DALL-E AI
        </p>
      </div>
      <div className='mt-16'>
        <input className='w-full px-3 py-3 border border-[#f0f0f0] text-sm outline-none
          rounded-xl'
          type='text'
          placeholder='Search posts...'
          onChange={handleSearch} />
      </div>
      <div className='mt-10'>
        {
          loading ? (<div className='flex justify-center items-center'>
            <Loader />
          </div>) : (
            <>
              {
                searchText && (
                  <h2 className='font-medium text-[#666e75] text-xl mb-3'>
                    Showing results for <span className='text-[#222328]'>
                      {searchText}
                    </span>
                  </h2>
                )
              }
              <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
                {
                  searchText ? (
                    <RenderCards
                      data={searchedResults}
                      title="No search results found"
                    />
                  ) : (
                    <RenderCards
                      data={allPosts}
                      title="no posts found"
                    />
                  )
                }
              </div>
            </>
          )
        }
      </div>
    </section>
  )
}

export default Home
